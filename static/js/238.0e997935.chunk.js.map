{"version":3,"file":"static/js/238.0e997935.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","novelas/NovelaPage.js","../node_modules/warning/warning.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","//Importacion del parametro establecido en la ruta de user/:id\r\nimport { Container, Row, Col, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport { BsCollectionPlay } from 'react-icons/bs'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport SEO from '../components/SEO'\r\nimport Data from './novelasData'\r\n\r\nfunction NovelaPage() {\r\n    const { id } = useParams()\r\n    \r\n    const filtrado = Data && Data.filter((filtro) => filtro.novela === id)\r\n    return (\r\n        <div>\r\n            {filtrado && filtrado.map((dato, index) => {\r\n                return (\r\n                    <section className='seccion' key={index.toString()}>\r\n                        <SEO\r\n                            title={`Linovels-Novela-${dato.novela}`}\r\n                            description={`Linovels-Novela-${dato.novela}`}\r\n                            keywords={\"novelas,ligeras,anime,cuentos,ver\"}\r\n                        />\r\n                        <Card bg='dark'>\r\n                            <h2 className='encabezado px-4 py-2' key={index}><strong>{dato.novela}</strong></h2>\r\n                            <Card body>\r\n                                <Container fluid>\r\n                                    <Row>\r\n                                        <Col sm=\"5\" md=\"4\" lg=\"3\" xl=\"2\">\r\n                                            <img className='portada' src={dato.portada} alt=\"\" />\r\n                                        </Col>\r\n                                        <Col sm=\"7\" md=\"8\" lg=\"9\" xl=\"10\">\r\n                                            <h4><strong>Sinopsis:</strong></h4>\r\n                                            <p>{dato['sinopsis']}</p>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Card>\r\n                            <h5 className='px-2 py-2' ><BsCollectionPlay size=\"20px\" /><strong> VOLUMENES</strong> </h5>\r\n                        </Card>\r\n                        <ListGroup>\r\n                            {dato.volumen.map((volumen, index) => {\r\n                                return (\r\n                                    <ListGroupItem className='bg-dark mb-1 px-2 py-2' key={index.toString()}>\r\n                                        <Link className='link text-light' to={\"./\" + (index + 1)}>{volumen.title}</Link>\r\n                                    </ListGroupItem>\r\n                                )\r\n                            })}\r\n                        </ListGroup>\r\n                    </section>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default NovelaPage\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["ListGroupItem","React","ref","bsPrefix","active","disabled","eventKey","className","variant","action","as","props","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","event","preventDefault","stopPropagation","onClick","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","ListGroup","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item","id","useParams","filtrado","Data","filtro","novela","map","dato","index","SEO","title","description","keywords","Card","bg","body","Container","fluid","Row","Col","sm","md","lg","xl","src","portada","alt","size","volumen","to","toString","warning","module","exports"],"sourceRoot":""}