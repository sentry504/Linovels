{"version":3,"file":"static/js/744.9a162045.chunk.js","mappings":"4OAqDA,UA9CA,WACI,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,EAAWC,EAAAA,GAAQA,EAAAA,EAAAA,QAAY,SAACC,GAAD,OAAYA,EAAOC,SAAWL,CAA9B,IACrC,OACI,yBACKE,GAAYA,EAASI,KAAI,SAACC,EAAMC,GAC7B,OACI,qBAASC,UAAU,UAAnB,WACI,SAAC,IAAD,CACIC,MAAK,0BAAqBH,EAAKF,QAC/BM,YAAW,0BAAqBJ,EAAKF,QACrCO,SAAU,uCAEd,UAAC,IAAD,CAAMC,GAAG,OAAT,WACI,eAAIJ,UAAU,uBAAd,UAAiD,4BAASF,EAAKF,UAArBG,IAC1C,SAAC,IAAD,CAAMM,MAAI,EAAV,UACI,SAAC,IAAD,CAAWC,OAAK,EAAhB,UACI,UAAC,IAAD,YACI,SAAC,IAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAA7B,UACI,gBAAKV,UAAU,UAAUW,IAAKb,EAAKc,QAASC,IAAI,QAEpD,UAAC,IAAD,CAAKN,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAA7B,WACI,yBAAI,6CACJ,uBAAIZ,EAAI,sBAKxB,gBAAIE,UAAU,YAAd,WAA2B,SAAC,MAAD,CAAac,KAAK,SAA7C,oBAEJ,SAAC,IAAD,UACKhB,EAAKiB,QAAQlB,KAAI,SAACkB,EAAShB,GACxB,OACI,SAAC,IAAD,CAAeC,UAAU,yBAAzB,UACI,SAAC,KAAD,CAAMA,UAAU,kBAAkBgB,GAAI,MAAQjB,EAAQ,GAAtD,SAA2DgB,EAAQd,SADhBF,EAAMkB,WAIpE,QA9ByBlB,EAAMkB,WAkC/C,KAGZ,C","sources":["novelas/NovelaPage.js"],"sourcesContent":["//Importacion del parametro establecido en la ruta de user/:id\r\nimport { Container, Row, Col, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport { GiBookshelf } from 'react-icons/gi'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport SEO from '../components/SEO'\r\nimport Data from './novelasData'\r\n\r\nfunction NovelaPage() {\r\n    const { id } = useParams()\r\n    \r\n    const filtrado = Data && Data.filter((filtro) => filtro.novela === id)\r\n    return (\r\n        <div>\r\n            {filtrado && filtrado.map((dato, index) => {\r\n                return (\r\n                    <section className='seccion' key={index.toString()}>\r\n                        <SEO\r\n                            title={`Linovels-Novela-${dato.novela}`}\r\n                            description={`Linovels-Novela-${dato.novela}`}\r\n                            keywords={\"novelas,ligeras,anime,cuentos,ver\"}\r\n                        />\r\n                        <Card bg='dark'>\r\n                            <h2 className='encabezado px-4 py-2' key={index}><strong>{dato.novela}</strong></h2>\r\n                            <Card body>\r\n                                <Container fluid>\r\n                                    <Row>\r\n                                        <Col sm=\"5\" md=\"4\" lg=\"3\" xl=\"2\">\r\n                                            <img className='portada' src={dato.portada} alt=\"\" />\r\n                                        </Col>\r\n                                        <Col sm=\"7\" md=\"8\" lg=\"9\" xl=\"10\">\r\n                                            <h4><strong>Sinopsis:</strong></h4>\r\n                                            <p>{dato['sinopsis']}</p>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Card>\r\n                            <h5 className='px-2 py-2' ><GiBookshelf size=\"25px\" />VOLUMENES </h5>\r\n                        </Card>\r\n                        <ListGroup>\r\n                            {dato.volumen.map((volumen, index) => {\r\n                                return (\r\n                                    <ListGroupItem className='bg-dark mb-1 px-2 py-2' key={index.toString()}>\r\n                                        <Link className='link text-light' to={\"./\" + (index + 1)}>{volumen.title}</Link>\r\n                                    </ListGroupItem>\r\n                                )\r\n                            })}\r\n                        </ListGroup>\r\n                    </section>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default NovelaPage\r\n"],"names":["id","useParams","filtrado","Data","filtro","novela","map","dato","index","className","title","description","keywords","bg","body","fluid","sm","md","lg","xl","src","portada","alt","size","volumen","to","toString"],"sourceRoot":""}